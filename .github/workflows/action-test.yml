name: 'action-test'

on:
  pull_request:

permissions:
  pull-requests: write
  issues: write

jobs:
  comment-multiline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          id: comment-multiline
          body: |
            ${{ github.event.pull_request.head.sha }} **CI check: inline body with context payload**

            Pull request number is: ${{ github.event.pull_request.number }}

  comment-body-inline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          body: |
            ${{ github.event.pull_request.head.sha }} **CI check: inline body without id**

  comment-template:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          id: comment-template
          template-path: .github/comment.md

  comment-template-bis:
    runs-on: ubuntu-latest
    needs: 
      - comment-template
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          id: comment-template
          template-path: .github/comment.md

  comment-template-with-var:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          id: comment-template-with-var
          template-path: .github/comment-with-var.md
          template-var: commit-hash - ${{ github.event.pull_request.head.sha }}

  test-main:
    runs-on: ubuntu-latest
    needs: 
      - comment-template
      - comment-template-bis
      - comment-body-inline
      - comment-multiline
      - comment-template-with-var
    steps:
      - uses: actions/checkout@v4
      - run: |
          npm install
      - run: |
          npm run build
      - uses: actions/github-script@v7
        with:
          script: |
            const { assertOneComment } = require(`${process.env.GITHUB_WORKSPACE}/lib/find-comment-tests`)

            // test by body input 
            await assertOneComment(github, context.payload, /inline body with context payload/)
            await assertOneComment(github, context.payload, /inline body without id/)
            await assertOneComment(github, context.payload, /comment from template[*]/)
            await assertOneComment(github, context.payload, /comment from template with var/)

            await assertOneComment(
              github,
              context.payload,
              new RegExp(`${context.payload.pull_request.head.sha}.*without id`)
            )
            await assertOneComment(
              github,
              context.payload,
              new RegExp(`${context.payload.pull_request.head.sha}.*comment from template[*]`)
            )
            await assertOneComment(
              github,
              context.payload,
              new RegExp(`with var(.|[\r\n]+)*${context.payload.pull_request.head.sha}`)
            )

            // test by comment id 
            await assertOneComment(github, context.payload, /comment-multiline --/)
            await assertOneComment(github, context.payload, /default-id --/)
            await assertOneComment(github, context.payload, /comment-template --/)
            await assertOneComment(github, context.payload, /comment-template-with-var --/)
